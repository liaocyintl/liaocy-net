"use strict";(self.webpackChunkliaocy_net=self.webpackChunkliaocy_net||[]).push([[1489],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,v=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return a?n.createElement(v,i(i({ref:t},u),{},{components:a})):n.createElement(v,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},30619:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),i=["components"],o={title:"Java8\u90a3\u4e9b\u5fd8\u5374\u7684\u4e8b",date:new Date("2019-07-03T15:15:00.000Z"),lang:"zh-Hans",tags:["Java","Tomcat"],categories:["Java"]},s=void 0,c={unversionedId:"archieved/2019/07/javareview",id:"archieved/2019/07/javareview",title:"Java8\u90a3\u4e9b\u5fd8\u5374\u7684\u4e8b",description:"\u6211\u5b66\u4e60Java\u5df2\u7ecf\u662f\u5341\u5e74\u4ee5\u524d\u7684\u4e8b\u60c5\u4e86\u3002\u8ddd\u79bb\u6700\u540e\u4e00\u6b21\u4f7f\u7528Java\u4e5f\u662f\u4e94\u5e74\u524d\u7684\u4e8b\u4e86\uff0c\u4ee5\u81f3\u4e8e\u6211\u4ee5\u4e3a\u8fd9\u8f88\u5b50\u4e0d\u4f1a\u518d\u4f7f\u7528Java\u4e86\uff0c\u5f00\u53d1\u7f51\u9875\u53ef\u4ee5\u7528PHP\uff0c\u6570\u636e\u5904\u7406\u53ef\u4ee5\u7528Python\uff0c\u5c31\u8fde\u4ece\u524d\u4e0d\u5f97\u4e0d\u4f7f\u7528Java\u5f00\u53d1\u7684Android\u5e94\u7528\u7adf\u7136\u4e5f\u6709\u4e86\u66ff\u4ee3\u54c1Kotlin\u3002\u8fd9\u4e9b\u5de5\u5177\u90fd\u8ba9\u5f00\u53d1\u66f4\u52a0\u7b80\u6d01\uff0c\u7279\u522b\u662f\u4e2a\u4eba\u5f00\u53d1\u7684\u65f6\u5019\uff0cPHP\u7ed9\u4eba\u7684\u611f\u89c9\u662f\u9879\u76ee\u53ef\u4ee5\u505a\u5b8c\uff0c\u800cJava\u603b\u662f\u80fd\u628a\u5c0f\u578b\u9879\u76ee\u5f00\u53d1\u6210\u4e2d\u578b\u9879\u76ee\uff0c\u628a\u4e2d\u578b\u9879\u76ee\u5f00\u53d1\u6210\u5927\u578b\u9879\u76ee\u3002",source:"@site/docs/archieved/2019/07/03-javareview.md",sourceDirName:"archieved/2019/07",slug:"/archieved/2019/07/javareview",permalink:"/liaocy-net/docs/archieved/2019/07/javareview",draft:!1,editUrl:"https://github.com/liaocyintl/liaocy-net/tree/main/docs/archieved/2019/07/03-javareview.md",tags:[{label:"Java",permalink:"/liaocy-net/docs/tags/java"},{label:"Tomcat",permalink:"/liaocy-net/docs/tags/tomcat"}],version:"current",sidebarPosition:3,frontMatter:{title:"Java8\u90a3\u4e9b\u5fd8\u5374\u7684\u4e8b",date:"2019-07-03T15:15:00.000Z",lang:"zh-Hans",tags:["Java","Tomcat"],categories:["Java"]},sidebar:"tutorialSidebar",previous:{title:"2019\u5e7406\u6708\u65e5\u8bed\u8bcd\u6c47",permalink:"/liaocy-net/docs/archieved/2019/06/japanesevocab"},next:{title:"\u57fa\u672c\u60c5\u5831\u6280\u8853\u8005(\u5348\u524d)\u306e\u307e\u3068\u3081\u30ce\u30fc\u30c8 01 \u57fa\u790e\u7406\u8ad6",permalink:"/liaocy-net/docs/archieved/2019/07/FE"}},u={},p=[{value:"Compile and Run Java in CMD",id:"compile-and-run-java-in-cmd",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Naming rule",id:"naming-rule",level:4},{value:"Variate Default Value",id:"variate-default-value",level:4},{value:"Metric Variable",id:"metric-variable",level:4},{value:"Array",id:"array",level:4},{value:"Comment",id:"comment",level:4},{value:"StringBuffer : for String modification",id:"stringbuffer--for-string-modification",level:4},{value:"Object.hashCode() : Hash code of the class",id:"objecthashcode--hash-code-of-the-class",level:4},{value:"instanceof :",id:"instanceof-",level:4},{value:"IsA, HasA",id:"isa-hasa",level:4},{value:"An Interface can extends another interface or other interfaces.",id:"an-interface-can-extends-another-interface-or-other-interfaces",level:4},{value:"Exception Class Structure",id:"exception-class-structure",level:4},{value:"RunTimeException: Do not checked by compiler.",id:"runtimeexception-do-not-checked-by-compiler",level:4},{value:"Generics:",id:"generics",level:4},{value:"enumeration: implements iterator",id:"enumeration-implements-iterator",level:4},{value:"HashMap Iterate:",id:"hashmap-iterate",level:4},{value:"format",id:"format",level:4},{value:"tags",id:"tags",level:4},{value:"Sample",id:"sample",level:4},{value:"generator",id:"generator",level:4},{value:"setUP() and tearDown()",id:"setup-and-teardown",level:4},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Forced close tomcat in CMD (Windows)",id:"forced-close-tomcat-in-cmd-windows",level:2},{value:"Tomcat Reload Automatically when source-code modified",id:"tomcat-reload-automatically-when-source-code-modified",level:2},{value:"Cookie",id:"cookie",level:2},{value:"JSP &amp; Servlet",id:"jsp--servlet",level:2},{value:"JAVA code",id:"java-code",level:3},{value:"Ouput1:",id:"ouput1",level:3},{value:"Ouput2:",id:"ouput2",level:3},{value:"Definition:",id:"definition",level:3},{value:"Page Directive:",id:"page-directive",level:3},{value:"taglib:",id:"taglib",level:4},{value:"Dispatcher",id:"dispatcher",level:3},{value:"JDBC",id:"jdbc",level:2},{value:"PreparedStatement",id:"preparedstatement",level:3},{value:"Transaction",id:"transaction",level:3},{value:"Datatype: Java VS RDBMS",id:"datatype-java-vs-rdbms",level:3},{value:"Create Database and Tables",id:"create-database-and-tables",level:2},{value:"Bean:",id:"bean",level:2},{value:"DAO: Data Access Objects",id:"dao-data-access-objects",level:2},{value:"Servlet :",id:"servlet-",level:2},{value:"JSP",id:"jsp",level:2},{value:"Foreach",id:"foreach",level:3}],d={toc:p};function m(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u6211\u5b66\u4e60Java\u5df2\u7ecf\u662f\u5341\u5e74\u4ee5\u524d\u7684\u4e8b\u60c5\u4e86\u3002\u8ddd\u79bb\u6700\u540e\u4e00\u6b21\u4f7f\u7528Java\u4e5f\u662f\u4e94\u5e74\u524d\u7684\u4e8b\u4e86\uff0c\u4ee5\u81f3\u4e8e\u6211\u4ee5\u4e3a\u8fd9\u8f88\u5b50\u4e0d\u4f1a\u518d\u4f7f\u7528Java\u4e86\uff0c\u5f00\u53d1\u7f51\u9875\u53ef\u4ee5\u7528PHP\uff0c\u6570\u636e\u5904\u7406\u53ef\u4ee5\u7528Python\uff0c\u5c31\u8fde\u4ece\u524d\u4e0d\u5f97\u4e0d\u4f7f\u7528Java\u5f00\u53d1\u7684Android\u5e94\u7528\u7adf\u7136\u4e5f\u6709\u4e86\u66ff\u4ee3\u54c1Kotlin\u3002\u8fd9\u4e9b\u5de5\u5177\u90fd\u8ba9\u5f00\u53d1\u66f4\u52a0\u7b80\u6d01\uff0c\u7279\u522b\u662f\u4e2a\u4eba\u5f00\u53d1\u7684\u65f6\u5019\uff0cPHP\u7ed9\u4eba\u7684\u611f\u89c9\u662f\u9879\u76ee\u53ef\u4ee5\u505a\u5b8c\uff0c\u800cJava\u603b\u662f\u80fd\u628a\u5c0f\u578b\u9879\u76ee\u5f00\u53d1\u6210\u4e2d\u578b\u9879\u76ee\uff0c\u628a\u4e2d\u578b\u9879\u76ee\u5f00\u53d1\u6210\u5927\u578b\u9879\u76ee\u3002"),(0,l.kt)("p",null,"\u6700\u8fd1\u53c2\u52a0\u57f9\u8bad\uff0c\u7adf\u7136\u53c8\u628aJava\u7cfb\u7edf\u6027\u5730\u5b66\u4e86\u4e00\u904d\uff0c\u7136\u540e\u7528\u6700\u540e\u534a\u4e2a\u6708\u7684\u65f6\u95f4\u548c\u4e00\u4e2a\u4e94\u4eba\u56e2\u961f\u5b8c\u6574\u7684\u8dd1\u4e86\u4e00\u904d\u7011\u5e03\u6a21\u578b\u3002\u8bf4\u5b9e\u8bdd\u5bf9Java\u7684\u5370\u8c61\u6709\u6240\u6539\u89c2\u3002Java\u867d\u7136\u8bed\u6cd5\u4e25\u683c\uff0c\u4f46\u5176\u63a5\u53e3\u3001\u62bd\u8c61\u7c7b\u3001\u5f3a\u6570\u636e\u7c7b\u578b\u7b49\u68c0\u67e5\u673a\u5236\uff0c\u901a\u8fc7IDE\u52a0\u6301\uff0c\u5728\u56e2\u961f\u5f00\u53d1\u4e2d\u8d77\u5230\u4e86\u4e0d\u574f\u7684\u6548\u679c\u3002\u53e6\u5916\u503c\u5f97\u6b23\u6170\u7684\u662f\uff0c\u6211\u5341\u5e74\u524d\u5b66\u8fc7\u7684\u77e5\u8bc6\u5230\u73b0\u5728\u7adf\u7136\u8fd8\u6ca1\u6709\u8fc7\u65f6\uff0c\u6211\u7a0d\u5fae\u611f\u5230\u4e00\u4e9b\u5b89\u5fc3\u3002"),(0,l.kt)("p",null,"\u5f53\u7136\u8fd8\u662f\u6709\u5f88\u591a\u5fd8\u6389\u7684\u5185\u5bb9\uff0c\u672c\u6587\u7528\u6765\u6574\u7406\u8fd9\u4e9b\u5185\u5bb9\u3002"),(0,l.kt)("h1",{id:"\u95ee\u9898\u80cc\u666f"},"\u95ee\u9898\u80cc\u666f"),(0,l.kt)("p",null,"Java8\u90a3\u4e9b\u5fd8\u5374\u7684\u4e8b"),(0,l.kt)("h1",{id:"cmd-mode"},"CMD Mode"),(0,l.kt)("h4",{id:"compile-and-run-java-in-cmd"},"Compile and Run Java in CMD"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# compile\n$ javac Hello.java\n# run\n$ java Hello\n")),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# export as java package\n$ java --jar Hello\n# run\n$ java Hello\n")),(0,l.kt)("h1",{id:"basic-grammar"},"Basic Grammar"),(0,l.kt)("h4",{id:"naming-rule"},"Naming rule"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Class TheClassNameUsingPascalCase{\n\n    public static final int TheConstant;\n\n    int theVariateUsingCamelCase;\n\n    void theFunctionNameUsingCamelCase(int theVariateUsingCamelCase){\n\n    }\n\n}\n\n")),(0,l.kt)("h4",{id:"variate-default-value"},"Variate Default Value"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\nshort, byte, int, long a = 0;\nfloat, double a = 0.0;\nchar a = '\\u0000';\nboolean a = false\nOther a = null;\n\n")),(0,l.kt)("h4",{id:"metric-variable"},"Metric Variable"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\n0.1F; //A float variable\n100000000L; //A long variable\n\n")),(0,l.kt)("h4",{id:"array"},"Array"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\nint arr[] = {10, 20, 30, 40};\n\nfor (int i : arr){\n    sout(i);\n}\n\nsout(arr.length);\n\n")),(0,l.kt)("h4",{id:"comment"},"Comment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// comment\n\n/* \n   comment1 \n   comment2\n*/\n\n/**\n   document1 \n   document2\n*/\n\n")),(0,l.kt)("h1",{id:"class-and-object"},"Class and Object"),(0,l.kt)("h4",{id:"stringbuffer--for-string-modification"},"StringBuffer : for String modification"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String args[]){\n    StringBuffer sBuffer = new StringBuffer("google\uff1a");\n    sBuffer.append("www");\n    sBuffer.append(".google");\n    sBuffer.append(".com");\n    System.out.println(sBuffer);\n}\n\n')),(0,l.kt)("h1",{id:"jvm"},"JVM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"CLASSPATH: a path of class files (Library)")),(0,l.kt)("h1",{id:"type"},"Type"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Autoboxing: Boxing a basic type into reference type")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Integer i = 100;\n==\nInteger i = new Integer(100);\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Unboxing: Unbox a reference type to basic type")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Integer i = 100;\nrs = i + 200;\n==\nrs = i.value() + 200;\n")),(0,l.kt)("h4",{id:"objecthashcode--hash-code-of-the-class"},"Object.hashCode() : Hash code of the class"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\n\n\n")),(0,l.kt)("h1",{id:"inheritance"},"Inheritance"),(0,l.kt)("h4",{id:"instanceof-"},"instanceof :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"ParentClass p1 = new ParentClass();\nObject o = (Object)p1;\nif (o instanceof ParentClass){\n    ParentClass p2 = (ParentClass)o;\n}\n")),(0,l.kt)("h4",{id:"isa-hasa"},"IsA, HasA"),(0,l.kt)("p",null,"Human is a Animal :\nHuman has a Head :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"class Human extends Animal{\n    private Head head;\n}\n")),(0,l.kt)("h1",{id:"interface"},"Interface"),(0,l.kt)("h4",{id:"an-interface-can-extends-another-interface-or-other-interfaces"},"An Interface can extends another interface or other interfaces."),(0,l.kt)("h1",{id:"exception"},"Exception"),(0,l.kt)("h4",{id:"exception-class-structure"},"Exception Class Structure"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Throwable": {\n        "Exception": {\n            "RunTimeException": {}\n        },\n        "Error":{}\n    }\n}\n')),(0,l.kt)("h4",{id:"runtimeexception-do-not-checked-by-compiler"},"RunTimeException: Do not checked by compiler."),(0,l.kt)("h1",{id:"collection"},"Collection"),(0,l.kt)("h4",{id:"generics"},"Generics:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public class SomeClass<T>{\n    private T t;\n    private List<T> list = new List<T>();\n    public T someMethod(T arg){\n        return new T(arg);\n    }\n}\n")),(0,l.kt)("h4",{id:"enumeration-implements-iterator"},"enumeration: implements iterator"),(0,l.kt)("h4",{id:"hashmap-iterate"},"HashMap Iterate:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'for(Map.Entry<String, String> entry : weekdays.entrySet()) {\n    System.out.println(entry.getKey() + " => " + entry.getValue());\n}\n')),(0,l.kt)("h1",{id:"documentation"},"Documentation"),(0,l.kt)("h4",{id:"format"},"format"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * This is a sample\n */\npublic class Sample(){\n    /**\n    * Say "Hello"\n    */\n    public void hello() {\n        System.out.println("Hello");\n    }\n}\n')),(0,l.kt)("h4",{id:"tags"},"tags"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * @author \u4f5c\u8005\n * @version \u7248\u672c\u53f7\n *  \u5f53\u524d\u7248\u672c\u53f7\n * @since \u7248\u672c\u53f7\n *  \u524d\u7f6e\u7248\u672c\u53f7\n * @see \u53c2\u8003\u6807\u7b7e\n * @deprecated \u8bf4\u660e\n *  \u8bf4\u660e\u8fc7\u671f\u7684\u60c5\u51b5 \n */\n")),(0,l.kt)("h4",{id:"sample"},"Sample"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/** This class shows a Sample\n * @version 1.0\n * @author Chenyi Liao\n */\npublic class Sample(){\n\n}\n")),(0,l.kt)("h4",{id:"generator"},"generator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ javadoc -d <output dir> <source.java>\n")),(0,l.kt)("h1",{id:"access"},"Access"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Same Class"),(0,l.kt)("th",{parentName:"tr",align:null},"Same Package"),(0,l.kt)("th",{parentName:"tr",align:null},"Sub-class"),(0,l.kt)("th",{parentName:"tr",align:null},"Different Class"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"public"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"protected"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb"),(0,l.kt)("td",{parentName:"tr",align:null},"\xd7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"(default)"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb"),(0,l.kt)("td",{parentName:"tr",align:null},"\xd7"),(0,l.kt)("td",{parentName:"tr",align:null},"\xd7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"private"),(0,l.kt)("td",{parentName:"tr",align:null},"\u25cb"),(0,l.kt)("td",{parentName:"tr",align:null},"\xd7"),(0,l.kt)("td",{parentName:"tr",align:null},"\xd7"),(0,l.kt)("td",{parentName:"tr",align:null},"\xd7")))),(0,l.kt)("h1",{id:"overload-and-override"},"Overload and Override"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Override: between super class and sub-class. If a class inherits a method from its superclass, then there is a chance to override the method provided that it is not marked final."),(0,l.kt)("li",{parentName:"ul"},"Overload (Overloading): in the same class.")),(0,l.kt)("p",null,"#JUnit"),(0,l.kt)("h4",{id:"setup-and-teardown"},"setUP() and tearDown()"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"setUP():  run before all test methods."),(0,l.kt)("li",{parentName:"ul"},"tearDown(): run after all test methods.")),(0,l.kt)("h1",{id:"serialize"},"Serialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"import java.io.Serializable;\n\npublic class Employee implements Serializable{\n\n}\n")),(0,l.kt)("h1",{id:"java-web-application"},"Java Web Application"),(0,l.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"DocumentRoot: the root directory for web server",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"ContextRoot: JSP files, HTML..."),(0,l.kt)("li",{parentName:"ul"},"WEB-INF: web.xml Classes...",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"lib: JAR files"),(0,l.kt)("li",{parentName:"ul"},"classes: not opening to the Internet. Java Classes"),(0,l.kt)("li",{parentName:"ul"},"web.xml")))))),(0,l.kt)("h2",{id:"forced-close-tomcat-in-cmd-windows"},"Forced close tomcat in CMD (Windows)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ netstat -nao\n$ taskkill /F /pid 3144\n")),(0,l.kt)("h2",{id:"tomcat-reload-automatically-when-source-code-modified"},"Tomcat Reload Automatically when source-code modified"),(0,l.kt)("p",null,"In server.xml, there is a:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<Context docBase="labhttp" path="/labhttp" reloadable="false" source="org.eclipse.jst.jee.server:labhttp"/></Host>\n')),(0,l.kt)("p",null,"Modify it as:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<Context docBase="labhttp" path="/labhttp" reloadable="true" source="org.eclipse.jst.jee.server:labhttp"/></Host>\n')),(0,l.kt)("p",null,"which can be reload automatically."),(0,l.kt)("h2",{id:"cookie"},"Cookie"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'Cookie[] cookies = request.getCookies();\nfor (Cookie cookie : cookies){\n    String name = cookie.getName();\n    String value = cookie.getValue();\n    String utfValue = URLDecoder.decode(cookie.getValue(), "UTF-8");\n}\n')),(0,l.kt)("h2",{id:"jsp--servlet"},"JSP & Servlet"),(0,l.kt)("h3",{id:"java-code"},"JAVA code"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'<% \nString msg = "helloworld";\n%>\n')),(0,l.kt)("h3",{id:"ouput1"},"Ouput1:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"<%=msg%>\n")),(0,l.kt)("h3",{id:"ouput2"},"Ouput2:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'<%\nout.println("HelloWorld");\n%>\n')),(0,l.kt)("h3",{id:"definition"},"Definition:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"<%!\nint b = 1;\n%>\n<%!\nprivate int add(int a, int b){\n    return a + b;\n}\n%>\n")),(0,l.kt)("h3",{id:"page-directive"},"Page Directive:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'<%@ page\n    [ language="java" ]\n    [ extends="package.class" ]\n    [ import="{package.class | package.*}, ..." ]\n    [ session="true|false" ]\n    [ buffer="none|8kb|sizekb" ]\n    [ autoFlush="true|false" ]\n    [ isThreadSafe="true|false" ]\n    [ info="text" ]\n    [ errorPage="relativeURL" ]\n    [ contentType="mimeType [ ; charset=characterSet ]" |\n        "text/html ; charset=ISO-8859-1" ]\n    [ isErrorPage="true|false" ]\n    [ pageEncoding="characterSet | ISO-8859-1" ]\n    [ isELIgnored="true|false"]\n%>\n')),(0,l.kt)("h4",{id:"taglib"},"taglib:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'<%@ taglib prefix="c" url="http://java.sun.com/jstl/core"%>\n<c:forEach begin="1" end="9" var="i">\n    <c:out value="${i}" />\n</c:forEach>\n')),(0,l.kt)("h3",{id:"dispatcher"},"Dispatcher"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.cnblogs.com/lulipro/p/7471987.html"},"reference"))),(0,l.kt)("p",null,"Servlet:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public class UsersServlet extends HttpServlet {\n    private static final long serialVersionUID = 1L ;\n\n    protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException , IOException {\n        /*****************\u4e00\u822c\u5b9e\u9645\u5f00\u53d1\u8fd9\u4e9b\u7528\u6237\u6570\u636e\u90fd\u662f\u4ece\u6570\u636e\u5e93\u67e5\u51fa\u6765\u7684*********/\n        List <User > users = new ArrayList <> ();\n        User u1 = new User () ;\n        u1 .setAge ( 20) ;\n        u1 .setName ( "Bob") ;\n        User u2 = new User () ;\n        u2 .setAge ( 21) ;\n        u2 .setName ( "Tony") ;\n        users .add ( u1) ;\n        users .add ( u2) ;\n        /*********************************************/\n        request .setAttribute ( "users", users) ;   //\u5bf9request \u8fdb\u5236\u9884\u5904\u7406\u51c6\u5907\u5de5\u4f5c\n        request .getRequestDispatcher ( "users.jsp").forward( request , response );//\u8f6c\u53d1\u5230users.jsp\uff0c\u8ba9\u4ed6\u53bb\u5177\u4f53\u54cd\u5e94\n    } \n}\n')),(0,l.kt)("p",null,"JSP:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'<%@ page   contentType= "text/html; charset=UTF-8" pageEncoding ="UTF-8" trimDirectiveWhitespaces= "true"\n          session ="true" %>\n<%@ taglib prefix= "c" uri = "http://java.sun.com/jstl/core_rt"   %>\n\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta http-equiv = "Content-Type" content ="text/html; charset=UTF-8">\n        <title> Users List</title>\n    </head>\n    <body>\n\n        < c:forEach var ="user" items= " ${users}" >\n        UserName:${user.name}  UserAge:${user.age}  <br />\n        </ c:forEach>\n    </body>\n</html>\n')),(0,l.kt)("h2",{id:"jdbc"},"JDBC"),(0,l.kt)("h3",{id:"preparedstatement"},"PreparedStatement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'PreparedStatement pstmt = con.prepareStatement("INSERT INTO table VALUES(?,?)");\npstmt.setInt(1, 11);\npstmt.setString(2, "abc");\nResultSet res = pstmt.executeQuery();\n\n//or\n\nInteger count = pstmt.executeUpdate();\n\n')),(0,l.kt)("h3",{id:"transaction"},"Transaction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'conn.setAutoCommit(false);\ntry{\n    stmt.executeUpdate("sql1");\n    stmt.executeUpdate("sql2");\n    conn.commit();\n} catch(Exception ex){\n    conn.rollback();\n} finally{\n    conn.setAutoCommit(true);\n}\n')),(0,l.kt)("h3",{id:"datatype-java-vs-rdbms"},"Datatype: Java VS RDBMS"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Java"),(0,l.kt)("th",{parentName:"tr",align:null},"RDBMS"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"CHAR VARCHAR")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"java.math.BigDecimal"),(0,l.kt)("td",{parentName:"tr",align:null},"NUMERIC")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"BIT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"byte"),(0,l.kt)("td",{parentName:"tr",align:null},"TINYINT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"short"),(0,l.kt)("td",{parentName:"tr",align:null},"SMALLINT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"INTEGER")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"BIGINT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"REAL")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"double"),(0,l.kt)("td",{parentName:"tr",align:null},"DOUBLE")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"byte[]"),(0,l.kt)("td",{parentName:"tr",align:null},"BINARY VARBINARY")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"java.sql.Date"),(0,l.kt)("td",{parentName:"tr",align:null},"DATE")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"java.sql.Time"),(0,l.kt)("td",{parentName:"tr",align:null},"TIME")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"java.sql.Timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},"TIMESTAMP")))),(0,l.kt)("h1",{id:"mvc"},"MVC"),(0,l.kt)("h2",{id:"create-database-and-tables"},"Create Database and Tables"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"create table customer(id serial, name varchar(100));\n")),(0,l.kt)("h2",{id:"bean"},"Bean:"),(0,l.kt)("p",null,"Create Bean class according to "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:": CustomerBean.java",":":!0,"CustomerBean.java":!0},"public class CustomerBean implements Serializable(){\n    private int id;\n    private String name;\n    // setter, getter\n}\n")),(0,l.kt)("h2",{id:"dao-data-access-objects"},"DAO: Data Access Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:": IDao.java",":":!0,"IDao.java":!0},"interface ICustomerDao{\n    void insert(Customer customer);\n    void update(Customer customer);\n    void delete(Customer customer);\n\n    List<Customer> findAll(Customer customer);\n    Customer findById(int customerId);\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:": CustomerDao.java",":":!0,"CustomerDao.java":!0},'public class CustomerDao implements ICustomerDao{\n    Connection con = null;\n    PreparedStatement pstmt = null;\n    ResultSet res = null;\n\n    CustomerDao{\n        con = DBManager.getConnection("xxxxx");\n    }\n}\n')),(0,l.kt)("h2",{id:"servlet-"},"Servlet :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'String name = request.getParameter("name");\n\nCustomer customer = new Customer(name);\n\nrequest.setAttribute("customer", customer);\nforward("customer", "xx.jsp");\n')),(0,l.kt)("h2",{id:"jsp"},"JSP"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsp"},'<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>\n\nThe name is : ${customer.name}\n')),(0,l.kt)("h3",{id:"foreach"},"Foreach"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsp"},'<%\n  String[] strs = {\n    "\u6700\u521d\u306e\u884c",\n    "\u771f\u3093\u4e2d\u306e\u884c",\n    "\u6700\u5f8c\u306e\u884c",\n  };\n  request.setAttribute("list", strs);\n%>\n<table>\n  <c:forEach var="v" items="${list}" varStatus="st">\n    <tr><td>${st.count}\u756a\u76ee</td><td>${v}</td></tr>\n  </c:forEach>\n</table>\n')))}m.isMDXComponent=!0}}]);